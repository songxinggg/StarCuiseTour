declare module "module_gm" {
    export abstract class DropdownItem extends UIScript {
        list?: DropdownList<any>;
        data?: any;
    }
    interface IGMUI extends UIScript {
        okButton: Button;
        cmdPanel: PanelWidget;
        dropList: ScrollBox;
        argText: InputBox;
        groupButton: StaleButton;
        cmdButton: StaleButton;
    }
    export class DropdownList<T extends DropdownItem> {
        private _root;
        private _itemCls;
        private space;
        /**
         * 不显示的缓存道具
         */
        private _cache;
        /**
         * 显示的道具
         */
        private _items;
        private _isDropdown;
        onSelect: Action1<string>;
        constructor(_root: IGMUI, _itemCls: {
            new (): T;
        }, space?: number);
        /**
      * 添加展开按钮事件
      */
        toggle(): void;
        /**
         * 添加展开按钮事件
         */
        expand(): void;
        /**
         * 添加展开按钮事件
         */
        unExpand(): void;
        /**
         * 添加一个选项
         * @param node
         * @param index 索引
         */
        addItem(data: any, index?: number): void;
        /**
         * 删除一个选项
         * @param node
         */
        removeItem(node: any): void;
        clear(): void;
        /**
         * 删除一个指定索引
         * @param index
         */
        removeItemAt(index: any): void;
        /**
         * 获取一个选项,超出范围则返回空
         * @param index
         */
        getItem(index: any): T;
        get size(): number;
        /**
         * 重新对齐面板
         */
        _invalidateLayout(): void;
    }
}

declare module "module_gm" {
    export class GMService {
        private static _instance;
        /**
         * 是否获取了GM用户列表
         */
        private isGetGMUserList;
        private userList;
        private authorityCallback;
        static get instance(): GMService;
        /**
         * 初始化UI
         */
        createUI(dropDownList: DropdownList<any>): void;
        /**
         * 初始化配置
         */
        constructor();
        getAuthority(): void;
        /**
         * 客户调用，判断主控端是否有GM权限
         * @param callback 回调
         */
        checkGMAuthority(callback: (isGM: boolean) => void): void;
        /**
         * 调用命令
         * @param data
         */
        cmd(data: GMData, param: string): void;
    }
}

declare module "module_gm" {
    export type GMData = {
        label: string;
        group: string;
        clientCmd?: (player: Player, value: string) => void;
        serverCmd?: (player: Player, value: string) => void;
        shortKey?: Keys;
    };
    export const GMConfig: any[];
    /**
     * 添加GM命令
     * @param label 名称
     * @param cmdClient 客户端命令
     * @param cmdServer 服务端命令
     * @param shortKey 快捷键
     */
    export function AddGMCommand(label: string, cmdClient?: (player: Player, value: string) => void, cmdServer?: (player: Player, value: string) => void, group?: string, shortKey?: Keys): void;
}

declare module "module_gm" {
    interface IGMItem extends DropdownItem {
        button: StaleButton;
    }
    interface IGMUI extends UIScript {
        okButton: Button;
        cmdPanel: PanelWidget;
        dropList: ScrollBox;
        argText: InputBox;
        groupButton: StaleButton;
        cmdButton: StaleButton;
    }
    export abstract class GMBasePanel<T extends IGMUI, I extends IGMItem> {
        private dropDownList;
        private isGroup;
        private groupText;
        private cmdText;
        private _view;
        constructor(_viewCls: {
            new (): T;
        }, _itemCls: {
            new (): I;
        });
        show(): void;
    }
}

declare module "module_gm" {
    export namespace GM {
        let getParam: () => string;
        /**
         * 客户端调用，开始GM
         * @param uiClass
         */
        function start(uiClass: {
            new (): Required<GMBasePanel<any, any>>;
        }): void;
        /**
         * 客户端调用，查看是否有GM权限
         * `
         * 权限来自开发者后台自定义存档GM.UserList
         * 结构为["userId1","userId2","userId3",....]
         * 如需增加GM权限，只需在存档中添加userId即可
         * `
         * @param callback true-有GM权限，false-无GM权限
         */
        function checkAuthority(callback: (isGM: boolean) => void): void;
    }
}
